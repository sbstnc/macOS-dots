{"version":3,"sources":["../src/phoenix.es6"],"names":["HIDDEN_DOCK_MARGIN","INCREMENT","MOVE_BY","CONTROL_SHIFT","CONTROL_ALT_SHIFT","LEFT","RIGHT","CENTER","NW","NE","SE","SW","ChainWindow","window1","margin","window","frame","parent","screen","flippedVisibleFrame","x","y","width","height","setFrame","space","normalSpaces","Space","all","filter","s","isNormal","length","targetSpace","targetScreen","screens","setFullScreen","spaces","map","removeWindows","addWindows","prevScreen","nextScreen","xRatio","yRatio","Math","round","direction","difference","factor","stepX","stepY","sign","max","min","delta","maximize","includes","halve","to","Window","prototype","chain","winChain","winTo","fit","set","fill","winFill","moveToSpace","winToSpace","resize","winResize","move","winMove","winFoldHorz","halveVertically","winFoldVert","guard","value","transform","undefined","i","Key","on","focused","next","array","recent","last","focus"],"mappings":"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","file":"phoenix.js","sourcesContent":["// Globals\nconst HIDDEN_DOCK_MARGIN = 3;\nconst INCREMENT = 0.05;\nconst MOVE_BY = 0.05;\nconst CONTROL_SHIFT = ['ctrl', 'shift'];\nconst CONTROL_ALT_SHIFT = ['ctrl', 'alt', 'shift'];\n\n// Relative directions\nconst LEFT = 'left';\nconst RIGHT = 'right';\nconst CENTER = 'center';\n\n// Cardinal directions\nconst NW = 'nw';\nconst NE = 'ne';\nconst SE = 'se';\nconst SW = 'sw';\n\nclass ChainWindow {\n\n  constructor(window1, margin = 10) {\n    this.window = window1;\n    this.margin = margin;\n    this.frame = this.window.frame();\n    this.parent = this.window.screen().flippedVisibleFrame();\n  }\n\n  // Difference frame\n  difference() {\n    return {\n      x: this.parent.x - this.frame.x,\n      y: this.parent.y - this.frame.y,\n      width: this.parent.width - this.frame.width,\n      height: this.parent.height - this.frame.height,\n    };\n  }\n\n  // Set frame\n  set() {\n    this.window.setFrame(this.frame);\n    this.frame = this.window.frame();\n    return this;\n  }\n\n  // Move to screen\n  screen(screen) {\n    this.parent = screen.flippedVisibleFrame();\n    return this;\n  }\n\n  // Move window to space\n  space(space) {\n    const normalSpaces = Space.all().filter(s => s.isNormal());\n    if (space <= normalSpaces.length) {\n      const targetSpace = normalSpaces[space - 1];\n      const targetScreen = targetSpace.screens()[0];\n\n      this.window.setFullScreen(false);\n      this.window.spaces().map(s => s.removeWindows([this.window]));\n      targetSpace.addWindows([this.window]);\n\n      const prevScreen = this.window.screen().flippedVisibleFrame();\n      const nextScreen = targetScreen.flippedVisibleFrame();\n      const xRatio = nextScreen.width / prevScreen.width;\n      const yRatio = nextScreen.height / prevScreen.height;\n\n      this.frame.x = nextScreen.x\n        + (this.frame.x - prevScreen.x) * xRatio\n        + (xRatio - 1) * Math.round(0.5 * this.frame.width);\n      this.frame.y = nextScreen.y\n        + (this.frame.y - prevScreen.y) * yRatio\n        + (yRatio - 1) * Math.round(0.5 * this.frame.height);\n      this.screen(targetScreen);\n    }\n    return this;\n  }\n\n  // Move to cardinal directions NW, NE, SE, SW or relative direction CENTER\n  to(direction) {\n    const difference = this.difference();\n\n    // X-coordinate\n    switch (direction) {\n      case NW:\n      case SW:\n        this.frame.x = this.parent.x + this.margin;\n        break;\n      case NE:\n      case SE:\n        this.frame.x = (this.parent.x + difference.width) - this.margin;\n        break;\n      case CENTER:\n        this.frame.x = this.parent.x + (difference.width / 2);\n        break;\n      default:\n        break;\n    }\n\n    // Y-coordinate\n    switch (direction) {\n      case NW:\n      case NE:\n        this.frame.y = this.parent.y + this.margin;\n        break;\n      case SE:\n      case SW:\n        this.frame.y = (this.parent.y + difference.height) - this.margin;\n        break;\n      case CENTER:\n        this.frame.y = this.parent.y + (difference.height / 2);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  // Move window by factor\n  move(factor) {\n    const difference = this.difference();\n    const [stepX, stepY] = [this.parent.width * factor.width || 0, // default to 0\n      this.parent.height * factor.height || 0];\n    // a single move can never occur in both dimensions -> addition is safe\n    switch (Math.sign(stepX + stepY)) {\n      case -1: // move left or up\n        this.frame.x = Math.max(this.frame.x + stepX,\n          this.parent.x + this.margin);\n        this.frame.y = Math.max(this.frame.y + stepY,\n          this.parent.y + this.margin);\n        break;\n      case 1: // move right or down\n        this.frame.x = Math.min(this.frame.x + stepX,\n          (this.parent.x + difference.width) - this.margin);\n        this.frame.y = Math.min(this.frame.y + stepY,\n          (this.parent.y + difference.height) - this.margin);\n        break;\n      default:\n    }\n    return this;\n  }\n\n  // Resize SE-corner by factor\n  resize(factor) {\n    const difference = this.difference();\n    if (factor.width != null) {\n      const delta = Math.min(this.parent.width * factor.width,\n        (difference.x + difference.width) - this.margin);\n      this.frame.width += delta;\n    }\n    if (factor.height != null) {\n      const delta = Math.min(this.parent.height * factor.height,\n        (difference.height - this.frame.y) + this.margin + HIDDEN_DOCK_MARGIN);\n      this.frame.height += delta;\n    }\n    return this;\n  }\n\n  // Maximize to fill whole screen\n  maximize() {\n    this.frame.width = this.parent.width - (2 * this.margin);\n    this.frame.height = this.parent.height - (2 * this.margin);\n    return this;\n  }\n\n  // Halve width\n  halve() {\n    this.frame.width /= 2;\n    return this;\n  }\n\n  halveVertically() {\n    this.frame.height /= 2;\n    return this;\n  }\n\n  // Fit to screen\n  fit() {\n    const difference = this.difference();\n    if (difference.width < 0 || difference.height < 0) {\n      this.maximize();\n    }\n    return this;\n  }\n\n  // Fill relatively to LEFT or RIGHT-side of screen, or fill whole screen\n  fill(direction) {\n    this.maximize();\n    if ([LEFT, RIGHT].includes(direction)) {\n      this.halve();\n    }\n    switch (direction) {\n      case LEFT:\n        this.to(NW);\n        break;\n      case RIGHT:\n        this.to(NE);\n        break;\n      default:\n        this.to(NW);\n    }\n    return this;\n  }\n\n}\n\n// Chain a Window-object\nWindow.prototype.chain = function winChain() {\n  return new ChainWindow(this);\n};\n\n// To direction in screen\nWindow.prototype.to = function winTo(direction, screen) {\n  const window = this.chain();\n  if (screen != null) {\n    window.screen(screen).fit();\n  }\n  return window.to(direction).set();\n};\n\n// Fill in screen\nWindow.prototype.fill = function winFill(direction, screen) {\n  const window = this.chain();\n  if (screen != null) {\n    window.screen(screen);\n  }\n  window.fill(direction).set();\n  // Ensure position for windows larger than expected\n  if (direction === RIGHT) {\n    return window.to(NE).set();\n  }\n  return window;\n};\n\nWindow.prototype.moveToSpace = function winToSpace(space) {\n  return this.chain().space(space).set();\n};\n\n// Resize by factor\nWindow.prototype.resize = function winResize(factor) {\n  return this.chain().resize(factor).set();\n};\n\nWindow.prototype.move = function winMove(factor) {\n  return this.chain().move(factor).set();\n};\n\nWindow.prototype.halve = function winFoldHorz() {\n  return this.chain().halve().set();\n};\n\nWindow.prototype.halveVertically = function winFoldVert() {\n  return this.chain().halveVertically().set();\n};\n\n\nfunction guard(value, transform) {\n  return (typeof value !== 'undefined' && value !== null) ? transform(value) : undefined;\n}\n\nfor (let i = 1; i <= 9; i += 1) {\n  Key.on(`${i}`, CONTROL_SHIFT, () => guard(Window.focused(), x => x.moveToSpace(i)));\n}\n\nKey.on('e', CONTROL_SHIFT, () => guard(Window.focused(), x => x.halve()));\n\nKey.on('r', CONTROL_SHIFT, () => guard(Window.focused(), x => x.halveVertically()));\n\n// Position Bindings\nKey.on('q', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(NW)));\n\nKey.on('w', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(NE)));\n\nKey.on('s', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(SE)));\n\nKey.on('a', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(SW)));\n\nKey.on('c', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(CENTER)));\n\nKey.on('q', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(NW, window.screen().next()));\n});\n\nKey.on('w', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(NE, window.screen().next()));\n});\n\nKey.on('s', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(SE, window.screen().next()));\n});\n\nKey.on('a', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(SW, window.screen().next()));\n});\n\nKey.on('c', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(CENTER, window.screen().next()));\n});\n\n// Fill Bindings\n\nKey.on('f', CONTROL_SHIFT, () => guard(Window.focused(), x => x.fill()));\n\nKey.on('o', CONTROL_SHIFT, () => guard(Window.focused(), x => x.fill(LEFT)));\n\nKey.on('p', CONTROL_SHIFT, () => guard(Window.focused(), x => x.fill(RIGHT)));\n\nKey.on('f', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.fill('', window.screen().next()));\n});\n\nKey.on('o', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.fill(LEFT, window.screen().next()));\n});\n\nKey.on('p', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.fill(RIGHT, window.screen().next()));\n});\n\n// Size Bindings\n\nKey.on('l', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({width: MOVE_BY})));\n\nKey.on('h', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({width: -MOVE_BY})));\n\nKey.on('j', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({height: MOVE_BY})));\n\nKey.on('k', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({height: -MOVE_BY})));\n\nKey.on('l', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({width: INCREMENT})));\n\nKey.on('h', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({width: -INCREMENT})));\n\nKey.on('j', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({height: INCREMENT})));\n\nKey.on('k', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({height: -INCREMENT})));\n\n// Focus Bindings\n\nKey.on('<', CONTROL_SHIFT, () => {\n  const array = Window.recent();\n  const last = array[array.length - 1];\n  return guard(last, x => x.focus());\n});\n"]}