{"version":3,"sources":["../src/phoenix.es6"],"names":["HIDDEN_DOCK_MARGIN","INCREMENT","MOVE_BY","CONTROL_SHIFT","CONTROL_ALT_SHIFT","LEFT","RIGHT","CENTER","NW","NE","SE","SW","ChainWindow","window1","margin","window","frame","parent","screen","flippedVisibleFrame","x","y","width","height","setFrame","direction","difference","factor","step","delta","Math","min","maximize","includes","halve","to","Window","prototype","chain","winChain","winTo","fit","set","fill","winFill","resize","winResize","move","winMove","winFoldHorz","halveVertically","winFoldVert","guard","value","transform","undefined","Key","on","focused","next","array","recent","last","length","focus"],"mappings":"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","file":"phoenix.js","sourcesContent":["// Globals\nconst HIDDEN_DOCK_MARGIN = 3;\nconst INCREMENT = 0.05;\nconst MOVE_BY = 0.05;\nconst CONTROL_SHIFT = ['ctrl', 'shift'];\nconst CONTROL_ALT_SHIFT = ['ctrl', 'alt', 'shift'];\n\n// Relative directions\nconst LEFT = 'left';\nconst RIGHT = 'right';\nconst CENTER = 'center';\n\n// Cardinal directions\nconst NW = 'nw';\nconst NE = 'ne';\nconst SE = 'se';\nconst SW = 'sw';\n\nclass ChainWindow {\n\n  constructor(window1, margin = 10) {\n    this.window = window1;\n    this.margin = margin;\n    this.frame = this.window.frame();\n    this.parent = this.window.screen().flippedVisibleFrame();\n  }\n\n  // Difference frame\n  difference() {\n    return {\n      x: this.parent.x - this.frame.x,\n      y: this.parent.y - this.frame.y,\n      width: this.parent.width - this.frame.width,\n      height: this.parent.height - this.frame.height,\n    };\n  }\n\n  // Set frame\n  set() {\n    this.window.setFrame(this.frame);\n    this.frame = this.window.frame();\n    return this;\n  }\n\n  // Move to screen\n  screen(screen) {\n    this.parent = screen.flippedVisibleFrame();\n    return this;\n  }\n\n  // Move to cardinal directions NW, NE, SE, SW or relative direction CENTER\n  to(direction) {\n    const difference = this.difference();\n\n    // X-coordinate\n    switch (direction) {\n      case NW: case SW:\n        this.frame.x = this.parent.x + this.margin;\n        break;\n      case NE: case SE:\n        this.frame.x = (this.parent.x + difference.width) - this.margin;\n        break;\n      case CENTER:\n        this.frame.x = this.parent.x + (difference.width / 2);\n        break;\n      default:\n        break;\n    }\n\n    // Y-coordinate\n    switch (direction) {\n      case NW: case NE:\n        this.frame.y = this.parent.y + this.margin;\n        break;\n      case SE: case SW:\n        this.frame.y = (this.parent.y + difference.height) - this.margin;\n        break;\n      case CENTER:\n        this.frame.y = this.parent.y + (difference.height / 2);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  // TODO :: REFACTOR\n  move(factor) {\n    const difference = this.difference();\n    if (factor.width != null) {\n      const step = this.parent.width * factor.width;\n      // left & right\n      if (step < 0) {\n        if (this.frame.x + step < this.parent.x + this.margin) {\n          this.frame.x = this.parent.x + this.margin;\n        } else {\n          this.frame.x += step;\n        }\n      }\n      if (step > 0) {\n        if (this.frame.x + this.frame.width + step > this.parent.width - this.margin) {\n          this.frame.x = (this.parent.x + difference.width) - this.margin;\n        } else {\n          this.frame.x += step;\n        }\n      }\n    }\n    if (factor.height != null) {\n      const step = this.parent.height * factor.height;\n      // top & bottom\n      if (step < 0) {\n        if (this.frame.y + step < this.parent.y + this.margin) {\n          this.frame.y = this.parent.y + this.margin;\n        } else {\n          this.frame.y += step;\n        }\n      }\n      if (step > 0) {\n        if (this.frame.y + this.frame.height + step > this.parent.height - this.margin) {\n          this.frame.y = (this.parent.y + difference.height) - this.margin;\n        } else {\n          this.frame.y += step;\n        }\n      }\n    }\n    return this;\n  }\n\n  // Resize SE-corner by factor\n  resize(factor) {\n    const difference = this.difference();\n    if (factor.width != null) {\n      const delta = Math.min(this.parent.width * factor.width,\n                             (difference.x + difference.width) - this.margin);\n      this.frame.width += delta;\n    }\n    if (factor.height != null) {\n      const delta = Math.min(this.parent.height * factor.height,\n                    (difference.height - this.frame.y) + this.margin + HIDDEN_DOCK_MARGIN);\n      this.frame.height += delta;\n    }\n    return this;\n  }\n\n  // Maximize to fill whole screen\n  maximize() {\n    this.frame.width = this.parent.width - (2 * this.margin);\n    this.frame.height = this.parent.height - (2 * this.margin);\n    return this;\n  }\n\n  // Halve width\n  halve() {\n    this.frame.width /= 2;\n    return this;\n  }\n\n  halveVertically() {\n    this.frame.height /= 2;\n    return this;\n  }\n\n  // Fit to screen\n  fit() {\n    const difference = this.difference();\n    if (difference.width < 0 || difference.height < 0) { this.maximize(); }\n    return this;\n  }\n\n  // Fill relatively to LEFT or RIGHT-side of screen, or fill whole screen\n  fill(direction) {\n    this.maximize();\n    if ([LEFT, RIGHT].includes(direction)) { this.halve(); }\n    switch (direction) {\n      case LEFT: this.to(NW); break;\n      case RIGHT: this.to(NE); break;\n      default: this.to(NW);\n    }\n    return this;\n  }\n\n}\n\n// Chain a Window-object\nWindow.prototype.chain = function winChain() {\n  return new ChainWindow(this);\n};\n\n// To direction in screen\nWindow.prototype.to = function winTo(direction, screen) {\n  const window = this.chain();\n  if (screen != null) { window.screen(screen).fit(); }\n  return window.to(direction).set();\n};\n\n// Fill in screen\nWindow.prototype.fill = function winFill(direction, screen) {\n  const window = this.chain();\n  if (screen != null) { window.screen(screen); }\n  window.fill(direction).set();\n  // Ensure position for windows larger than expected\n  if (direction === RIGHT) { return window.to(NE).set(); }\n  return window;\n};\n\n// Resize by factor\nWindow.prototype.resize = function winResize(factor) {\n  return this.chain().resize(factor).set();\n};\n\nWindow.prototype.move = function winMove(factor) {\n  return this.chain().move(factor).set();\n};\n\nWindow.prototype.halve = function winFoldHorz() {\n  return this.chain().halve().set();\n};\n\nWindow.prototype.halveVertically = function winFoldVert() {\n  return this.chain().halveVertically().set();\n};\n\n\nfunction guard(value, transform) {\n  return (typeof value !== 'undefined' && value !== null) ? transform(value) : undefined;\n}\n\nKey.on('e', CONTROL_SHIFT, () => guard(Window.focused(), x => x.halve()));\n\nKey.on('r', CONTROL_SHIFT, () => guard(Window.focused(), x => x.halveVertically()));\n\n// Position Bindings\nKey.on('q', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(NW)));\n\nKey.on('w', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(NE)));\n\nKey.on('s', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(SE)));\n\nKey.on('a', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(SW)));\n\nKey.on('c', CONTROL_SHIFT, () => guard(Window.focused(), x => x.to(CENTER)));\n\nKey.on('q', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(NW, window.screen().next()));\n});\n\nKey.on('w', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(NE, window.screen().next()));\n});\n\nKey.on('s', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(SE, window.screen().next()));\n});\n\nKey.on('a', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(SW, window.screen().next()));\n});\n\nKey.on('c', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.to(CENTER, window.screen().next()));\n});\n\n// Fill Bindings\n\nKey.on('f', CONTROL_SHIFT, () => guard(Window.focused(), x => x.fill()));\n\nKey.on('o', CONTROL_SHIFT, () => guard(Window.focused(), x => x.fill(LEFT)));\n\nKey.on('p', CONTROL_SHIFT, () => guard(Window.focused(), x => x.fill(RIGHT)));\n\nKey.on('f', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.fill('', window.screen().next()));\n});\n\nKey.on('o', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.fill(LEFT, window.screen().next()));\n});\n\nKey.on('p', CONTROL_ALT_SHIFT, () => {\n  const window = Window.focused();\n  return guard(window, x => x.fill(RIGHT, window.screen().next()));\n});\n\n// Size Bindings\n\nKey.on('l', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({ width: MOVE_BY })));\n\nKey.on('h', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({ width: -MOVE_BY })));\n\nKey.on('j', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({ height: MOVE_BY })));\n\nKey.on('k', CONTROL_SHIFT, () => guard(Window.focused(), x => x.move({ height: -MOVE_BY })));\n\nKey.on('l', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({ width: INCREMENT })));\n\nKey.on('h', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({ width: -INCREMENT })));\n\nKey.on('j', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({ height: INCREMENT })));\n\nKey.on('k', CONTROL_ALT_SHIFT, () => guard(Window.focused(), x => x.resize({ height: -INCREMENT })));\n\n// Focus Bindings\n\nKey.on('<', CONTROL_SHIFT, () => {\n  const array = Window.recent();\n  const last = array[array.length - 1];\n  return guard(last, x => x.focus());\n});\n"]}